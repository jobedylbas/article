csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 6))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
components <- igraph::clusters(g, mode="strong")
biggest_cluster_id <- which.max(components$csize)
# ids
vert_ids <- V(g)[components$membership == biggest_cluster_id]
# subgraph
igraph::induced_subgraph(g, vert_ids)
plot(g)
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
df[match(stage, stages), char] <- pr[1, char]
}
}
df <- subset(df, select = -c(1:5))
df <- as.data.frame(t(df))
df$character <- rownames(df)
df <- df %>% gather(stage, pageRank, c(1, 2, 3))
df$stage <- as.numeric(df$stage)
colnames(df)[colnames(df) == 'character'] <- 'Character'
p <- ggplot(df, aes(x = stage, y = pageRank, colour = Character, pch = Character, group = Character)) +
geom_point(size=2.5) + geom_line(size=1) + theme_bw() +
scale_x_continuous('Stages', labels = c('Departure', 'Initiation', 'Return'), breaks = c(1,2,3)) +
ylim(0.0, 0.30) + ylab('PageRank') +
theme(
panel.grid.minor.x = element_blank()
)
print(p)
#print(df)
}
t <- decompose.graph(g)
V(t[1])
V(t[[1])
V(t[[1]])
V(t[[3]])
V(t[[10]])
length(t)
t
max(V(t))
count(V(t))
vcount(t[5])
vcount(t[[5]])
vcount(t[[6]])
vcount(t[[11]])
plot(t[[1]])
plot(t[[11]])
plot(t[[which.max(V(T))]])
plot(t[[which.max(V(t))]])
t
sort(y)
sort(y)
sort(t)
t[order(vcount(t))]
order(t)
sort(t)
sort(t, key = V(t))
t[[11]]
V(t[[11]])
t[[11]]$edges
t[[11]]
View(t)
t <- t[[1]]
t <- decompose.graph(g)
t
t <- t[[11]]
t
sort(t)
t <- decompose.graph(g)
V(h)
V(g)
V(t)
V(t[[11]])
# First, check if needed packages are installed and install them.
pkgs <- c("igraph", "ggplot2", "knitr", "plyr", 'dplyr', 'tidyr', 'qgraph')
for (pkg in pkgs) {
if(!require(pkg, character.only = TRUE)) {
install.packages(pkg)
if (!require(pkg, character.only = TRUE)) stop("load failure: ", pkg)
}
}
library("igraph")
library("ggplot2")
library("plyr")
# Create const
dataDir <- "./data"
stages <- c("departure", "initiation", "return")
movieNames <- c("The Matrix", "Star Wars", "The Lion King", "Hunger Games")
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 6))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
df[match(stage, stages), char] <- pr[1, char]
}
}
df <- subset(df, select = -c(1:5))
df <- as.data.frame(t(df))
df$character <- rownames(df)
df <- df %>% gather(stage, pageRank, c(1, 2, 3))
df$stage <- as.numeric(df$stage)
colnames(df)[colnames(df) == 'character'] <- 'Character'
p <- ggplot(df, aes(x = stage, y = pageRank, colour = Character, pch = Character, group = Character)) +
geom_point(size=2.5) + geom_line(size=1) + theme_bw() +
scale_x_continuous('Stages', labels = c('Departure', 'Initiation', 'Return'), breaks = c(1,2,3)) +
ylim(0.0, 0.30) + ylab('PageRank') +
theme(
panel.grid.minor.x = element_blank()
)
print(p)
#print(df)
}
t <- decompose.graph(g)
t
apply(t, V(g))
apply(t, V())
apply(t, V
)
apply(t, 1, V)
apply(t, 2, V)
apply(t, 1, V)
t
typeof(t)
lapply(t, V)
lapply(t, V)
max(lapply(t, V))
max(lapply(t, V))
lapply(t, V)
lapply(t, V)[[11]]
lapply(t, "V")
lapply(t, V)
t
lapply(t, V)
lapply(lapply(t, V), length)
max(lapply(lapply(t, V), length))
max(lapply(lapply(t, V), length)))
max(lapply(lapply(t, V), length))
which.max(unlist(lapply(lapply(t, V), length)))
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 6))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
g <- t[which.max(unlist(lapply(lapply(t, V), length)))]
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
df[match(stage, stages), char] <- pr[1, char]
}
}
df <- subset(df, select = -c(1:5))
df <- as.data.frame(t(df))
df$character <- rownames(df)
df <- df %>% gather(stage, pageRank, c(1, 2, 3))
df$stage <- as.numeric(df$stage)
colnames(df)[colnames(df) == 'character'] <- 'Character'
p <- ggplot(df, aes(x = stage, y = pageRank, colour = Character, pch = Character, group = Character)) +
geom_point(size=2.5) + geom_line(size=1) + theme_bw() +
scale_x_continuous('Stages', labels = c('Departure', 'Initiation', 'Return'), breaks = c(1,2,3)) +
ylim(0.0, 0.30) + ylab('PageRank') +
theme(
panel.grid.minor.x = element_blank()
)
print(p)
#print(df)
}
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 6))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
t <- decompose.graph(g)
g <- t[which.max(unlist(lapply(lapply(t, V), length)))]
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
df[match(stage, stages), char] <- pr[1, char]
}
}
df <- subset(df, select = -c(1:5))
df <- as.data.frame(t(df))
df$character <- rownames(df)
df <- df %>% gather(stage, pageRank, c(1, 2, 3))
df$stage <- as.numeric(df$stage)
colnames(df)[colnames(df) == 'character'] <- 'Character'
p <- ggplot(df, aes(x = stage, y = pageRank, colour = Character, pch = Character, group = Character)) +
geom_point(size=2.5) + geom_line(size=1) + theme_bw() +
scale_x_continuous('Stages', labels = c('Departure', 'Initiation', 'Return'), breaks = c(1,2,3)) +
ylim(0.0, 0.30) + ylab('PageRank') +
theme(
panel.grid.minor.x = element_blank()
)
print(p)
#print(df)
}
t[which.max(unlist(lapply(lapply(t, V), length)))]
plot(t)
print(t)
t
t[which.max(unlist(lapply(lapply(t, V), length)))]
g
plot(g)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
t <- decompose.graph(g)
lapply(t, vcount)
max(lapply(t, vcount))
max(unlist(lapply(t, vcount)))
which.max(unlist(lapply(t, vcount)))
t[[4]]
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 6))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
t <- decompose.graph(g)
g <- t[which.max(unlist(lapply(t, vcount)))]
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
df[match(stage, stages), char] <- pr[1, char]
}
}
df <- subset(df, select = -c(1:5))
df <- as.data.frame(t(df))
df$character <- rownames(df)
df <- df %>% gather(stage, pageRank, c(1, 2, 3))
df$stage <- as.numeric(df$stage)
colnames(df)[colnames(df) == 'character'] <- 'Character'
p <- ggplot(df, aes(x = stage, y = pageRank, colour = Character, pch = Character, group = Character)) +
geom_point(size=2.5) + geom_line(size=1) + theme_bw() +
scale_x_continuous('Stages', labels = c('Departure', 'Initiation', 'Return'), breaks = c(1,2,3)) +
ylim(0.0, 0.30) + ylab('PageRank') +
theme(
panel.grid.minor.x = element_blank()
)
print(p)
#print(df)
}
typeof(g)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
typeof(g)
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 6))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
t <- decompose(g)
g <- t[which.max(unlist(lapply(t, vcount)))]
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
df[match(stage, stages), char] <- pr[1, char]
}
}
df <- subset(df, select = -c(1:5))
df <- as.data.frame(t(df))
df$character <- rownames(df)
df <- df %>% gather(stage, pageRank, c(1, 2, 3))
df$stage <- as.numeric(df$stage)
colnames(df)[colnames(df) == 'character'] <- 'Character'
p <- ggplot(df, aes(x = stage, y = pageRank, colour = Character, pch = Character, group = Character)) +
geom_point(size=2.5) + geom_line(size=1) + theme_bw() +
scale_x_continuous('Stages', labels = c('Departure', 'Initiation', 'Return'), breaks = c(1,2,3)) +
ylim(0.0, 0.30) + ylab('PageRank') +
theme(
panel.grid.minor.x = element_blank()
)
print(p)
#print(df)
}
g
page_rank(g)
t
t[[which.max(unlist(lapply(t, vcount)))]]
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 6))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
t <- decompose(g)
g <- t[[which.max(unlist(lapply(t, vcount)))]
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 6))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
t <- decompose(g)
g <- t[[which.max(unlist(lapply(t, vcount)))]]
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
df[match(stage, stages), char] <- pr[1, char]
}
}
df <- subset(df, select = -c(1:5))
df <- as.data.frame(t(df))
df$character <- rownames(df)
df <- df %>% gather(stage, pageRank, c(1, 2, 3))
df$stage <- as.numeric(df$stage)
colnames(df)[colnames(df) == 'character'] <- 'Character'
p <- ggplot(df, aes(x = stage, y = pageRank, colour = Character, pch = Character, group = Character)) +
geom_point(size=2.5) + geom_line(size=1) + theme_bw() +
scale_x_continuous('Stages', labels = c('Departure', 'Initiation', 'Return'), breaks = c(1,2,3)) +
ylim(0.0, 0.30) + ylab('PageRank') +
theme(
panel.grid.minor.x = element_blank()
)
print(p)
#print(df)
}
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 6))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
t <- decompose(g)
g <- t[[which.max(unlist(lapply(t, vcount)))]]
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
if (char in colnames(pr)) {
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 6))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
t <- decompose(g)
g <- t[[which.max(unlist(lapply(t, vcount)))]]
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
if (char%in% colnames(pr)) {
df[match(stage, stages), char] <- pr[1, char]
} else {
df[match(stage, stages), char] <- 0
}
}
}
df <- subset(df, select = -c(1:5))
df <- as.data.frame(t(df))
df$character <- rownames(df)
df <- df %>% gather(stage, pageRank, c(1, 2, 3))
df$stage <- as.numeric(df$stage)
colnames(df)[colnames(df) == 'character'] <- 'Character'
p <- ggplot(df, aes(x = stage, y = pageRank, colour = Character, pch = Character, group = Character)) +
geom_point(size=2.5) + geom_line(size=1) + theme_bw() +
scale_x_continuous('Stages', labels = c('Departure', 'Initiation', 'Return'), breaks = c(1,2,3)) +
ylim(0.0, 0.30) + ylab('PageRank') +
theme(
panel.grid.minor.x = element_blank()
)
print(p)
#print(df)
}
View(pr)
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 5))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
t <- decompose(g)
g <- t[[which.max(unlist(lapply(t, vcount)))]]
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
if (char %in% colnames(pr)) {
df[match(stage, stages), char] <- pr[1, char]
} else {
df[match(stage, stages), char] <- 0
}
}
}
df <- subset(df, select = -c(1:5))
df <- as.data.frame(t(df))
df$character <- rownames(df)
df <- df %>% gather(stage, pageRank, c(1, 2, 3))
df$stage <- as.numeric(df$stage)
colnames(df)[colnames(df) == 'character'] <- 'Character'
p <- ggplot(df, aes(x = stage, y = pageRank, colour = Character, pch = Character, group = Character)) +
geom_point(size=2.5) + geom_line(size=1) + theme_bw() +
scale_x_continuous('Stages', labels = c('Departure', 'Initiation', 'Return'), breaks = c(1,2,3)) +
ylim(0.0, 0.30) + ylab('PageRank') +
theme(
panel.grid.minor.x = element_blank()
)
print(p)
#print(df)
}
View(df)
# Create plot with importance of 5 most characters in the history evolution
for (movie in movieNames) {
csvFilename <- paste(dataDir, "static", paste(movie, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
pr <- t(head(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)), 5))
print(pr)
df <- data.frame(c1 = c(0.0, 0.0, 0.0), c2 = c(0.0, 0.0, 0.0), c3= c(0.0, 0.0, 0.0), c4 = c(0.0, 0.0, 0.0), c5 = c(0.0, 0.0, 0.0))
chars <- colnames(pr)
for (stage in stages) {
csvFilename <- paste(dataDir, "dynamic", movie, paste(stage, ".csv", sep = ''), sep = '/')
csvFile <- read.csv(csvFilename, header = T, row.names = 1)
g <- graph_from_adjacency_matrix(as.matrix(csvFile), mode = c('undirected'), weighted = T)
t <- decompose(g)
g <- t[[which.max(unlist(lapply(t, vcount)))]]
pr <- t(as.data.frame(sort(page_rank(g, weights = E(g)$weight)$vector, decreasing = T)))
for (char in chars) {
if (char %in% colnames(pr)) {
df[match(stage, stages), char] <- pr[1, char]
} else {
df[match(stage, stages), char] <- 0
}
}
}
df <- subset(df, select = -c(1:5))
df <- as.data.frame(t(df))
df$character <- rownames(df)
df <- df %>% gather(stage, pageRank, c(1, 2, 3))
df$stage <- as.numeric(df$stage)
colnames(df)[colnames(df) == 'character'] <- 'Character'
p <- ggplot(df, aes(x = stage, y = pageRank, colour = Character, pch = Character, group = Character)) +
geom_point(size=2.5) + geom_line(size=1) + theme_bw() +
scale_x_continuous('Stages', labels = c('Departure', 'Initiation', 'Return'), breaks = c(1,2,3)) +
ylim(0.0, 0.35) + ylab('PageRank') +
theme(
panel.grid.minor.x = element_blank()
)
print(p)
#print(df)
}
